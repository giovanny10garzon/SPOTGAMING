from django.db import models

from Anexos.models import *
from .choices import *
# Create your models here.
from django.shortcuts import render


class Cliente(models.Model):
    nit = models.CharField(max_length=15, null=True, verbose_name="NIT")
    nombre = models.CharField(max_length=100, null=True, verbose_name="Nombre")
    id_inspired = models.IntegerField(default=0, verbose_name="ID Inspired")
    razon = models.ForeignKey(Razos_Social, on_delete=models.CASCADE, null=True, verbose_name="Razon Social")
    contacto = models.CharField(max_length=100, null=True, verbose_name="Contacto")
    Grupos = models.ForeignKey(Grupos, on_delete=models.CASCADE, null=True, blank=True, verbose_name="Grupo")
    direccion = models.CharField(max_length=100, null=True, verbose_name="Dirección")
    ciudad = models.ForeignKey(Ciudad, on_delete=models.CASCADE, null=True, verbose_name="Ciudad")
    # id_ciudad = models.IntegerField( null=True)
    departamento = models.ForeignKey(Departamento, on_delete=models.CASCADE, null=True, verbose_name="Departamento")
    # id_departamento = models.IntegerField( null=True)
    telefono = models.CharField(max_length=30, null=True, verbose_name="Telefono")
    porcentaje = models.FloatField(default=0.00, null=True, verbose_name="% Participación")
    impuesto = models.FloatField(default=353500, null=True, verbose_name="Impuesto")
    iva = models.FloatField(default=137970, null=True, verbose_name="Iva")
    dias_liquida = models.IntegerField(default=30, null=True, verbose_name="Días Liquidar x Mes:")
    contratoCol = models.CharField(max_length=20, null=True, verbose_name="# Contrato ColJuegos:")
    tipo_liquida = models.IntegerField(default=0)
    liquida_mes = models.CharField(max_length=50, default='MENSUAL', null=True, verbose_name="Metodo", choices=Modelo_liquida)
    fecha_liquida = models.DateTimeField(null=True)
    liquida = models.CharField(max_length=50, default='ULT. DIA DELMES', null=True, choices=Tipo_Liquida)
    descuentos = models.IntegerField(default=0, null=True, verbose_name="$ Otros Descuentos:")
    presupuesto_dia = models.IntegerField(default=60000, null=True, verbose_name="$ Monto x Dia:")
    dia_liquida = models.CharField(max_length=30, null=True)
    hora_liquida = models.DateTimeField(default=0, null=True)
    condicion = models.IntegerField(default=0, null=True)
    dias_sin = models.IntegerField(default=5, null=True, verbose_name="Días Sin Transmitir:")
    variable = models.IntegerField(default=12.00, null=True, verbose_name="% Variable:")
    cobro_dia = models.IntegerField(default=5, null=True, verbose_name="Cobro x Días NO Transm.:")
    email = models.CharField(max_length=100, null=True, verbose_name="EMail:")
    email_recaudo = models.CharField(max_length=100, null=True, verbose_name="EMail Rec. x Maquina:")
    email2 = models.CharField(max_length=100, null=True, verbose_name="EMail Fallas Salas:", blank=True)
    email4 = models.CharField(max_length=100, null=True, verbose_name="EMail Rec. x Grupo:", blank=True)
    email3 = models.CharField(max_length=100, null=True, verbose_name="EMail Recaudo x Sala:", blank=True)
    email_fallas = models.IntegerField(default=0, null=True, verbose_name="EMail Fallas:")
    email_contadores = models.IntegerField(default=0, null=True, verbose_name="EMail Contadores:")
    email_sin_transmmitir = models.IntegerField(default=0, null=True, verbose_name="EMail Sin Transmitir:")
    fallas = models.IntegerField(default=1, null=True)
    email_recaudo_sala = models.IntegerField(default=0, null=True)
    email_5 = models.CharField(max_length=200, null=True)
    email_recaudo_grupo = models.IntegerField(default=0, null=True)
    email_6 = models.CharField(max_length=200, null=True)
    email_sin_transmitir_dia = models.IntegerField(default=0, null=True)
    activo = models.IntegerField(default=1, null=True, verbose_name="Registro Activo")
    visor = models.IntegerField(default=0, null=True, verbose_name="Incluir en el visor")
    eliminar = models.IntegerField(default=0, null=True)
    id_user = models.IntegerField(default=0, null=True, verbose_name="Usuario:", blank=True)
    id_segurdad = models.IntegerField(default=0, null=True, blank=True)
    fecha_seguridad = models.DateTimeField(null=True, blank=True)
    sincroniza = models.IntegerField(default=0, null=True, blank=True)
    fecha_sincroniza = models.DateTimeField(null=True, blank=True)
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")

    def nombre_cliente(self):
        return "{}".format(self.nombre)

    def __str__(self):
        return self.nombre_cliente()

class Sala(models.Model):
    id_codigo = models.CharField(max_length=8, null=True, verbose_name="Código")
    id_inspired = models.IntegerField(null=True, verbose_name="ID Inspired")
    # id_cliente = models.IntegerField()
    clientes = models.ForeignKey(Cliente, on_delete=models.CASCADE, null=True, verbose_name="Cliente")
    nombre = models.CharField(max_length=100, null=True, verbose_name="Nombre")
    direccion = models.CharField(max_length=100, null=True)
    ciudad = models.ForeignKey(Ciudad, on_delete=models.CASCADE, null=True)
    #id_ciudad = models.IntegerField(null=True)
    departamento = models.ForeignKey(Departamento, on_delete=models.CASCADE, null=True)
    #id_departamento = models.IntegerField(null=True)
    telefono = models.CharField(max_length=30, null=True)
    email = models.CharField(max_length=100, null=True, verbose_name="E-Mail")
    contacto = models.CharField(max_length=50, null=True)
    razon = models.ForeignKey(Razos_Social, on_delete=models.CASCADE, null=True, verbose_name="Razon Social")
    porcentaje = models.FloatField(default=0.00, null=True, verbose_name="% Participación")
    impuesto = models.FloatField(default=275283, null=True, verbose_name="$ Imp. ColJuegos Fijo:")
    iva = models.FloatField(default=137970, null=True, verbose_name="$ IVA:")
    otros = models.FloatField(default=0, null=True, verbose_name="$ Otros Gastos:")
    descuentos = models.FloatField(default=0, null=True, verbose_name="$ Otros Descuentos:")
    dias_liquida = models.IntegerField(default=30, null=True, verbose_name="Días Liquidar/Mes:")
    tipo_liquida = models.IntegerField(default=0, null=True, verbose_name="Tiene Liq. / Cobro Fijo:")
    id_tipo = models.CharField(max_length=20, null=True, verbose_name="Metodo:", choices=Modelo_liquida)
    liquida = models.CharField(max_length=20, null=True, verbose_name="Cierre Liquidacion:", choices=Tipo_Liquida)
    cobro_dia = models.IntegerField(default=60000, null=True, verbose_name="Cobro x Días NO Transm.:	")
    presupuesto_dia = models.FloatField(default=0, null=True, verbose_name=" $ Monto x Dia:")
    dia_liquida = models.CharField(default=30, max_length=2, null=True, blank=True)
    hora_liquida = models.DateTimeField(null=True, blank=True)
    email2 = models.CharField(max_length=100, null=True, blank=True)
    email3 = models.CharField(max_length=100, null=True, blank=True)
    email_recaudo = models.IntegerField(default=0, null=True, verbose_name="Recaudo Diario", blank=True)
    email_fallas = models.IntegerField(default=0, null=True, verbose_name="Fallas", blank=True)
    email_sin_transmitir = models.IntegerField(default=0, null=True, verbose_name="Sin Transm. Semana", blank=True)
    domingo = models.IntegerField(default=0, null=True, blank=True)
    festivos = models.IntegerField(default=0, null=True, blank=True)
    reporte = models.IntegerField(default=0, null=True, verbose_name="Incluir Reportes", blank=True)
    email_sin_transmitir_dia = models.IntegerField(default=0, null=True, verbose_name="Sin Transm. Dia", blank=True)
    variable = models.FloatField(default=12, null=True, verbose_name="%Variable", blank=True)
    activo = models.IntegerField(default=1, null=True, blank=True)
    eliminar = models.IntegerField(default=0, null=True, blank=True)
    fecha_liquida = models.DateTimeField(null=True, blank=True)
    id_seguridad = models.IntegerField(default=0, null=True, blank=True)
    fecha_seguridad = models.DateTimeField(null=True, blank=True)
    sincroniza = models.IntegerField(default=0, null=True, blank=True)
    fecha_sincroniza = models.DateTimeField(null=True, blank=True)
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")

    def nombre_sala(self):
        return  "{}".format(self.nombre)

    def __str__(self):
        return self.nombre_sala()

class Maquina(models.Model):
    id_codigo = models.CharField(max_length=10, verbose_name='codigo', null=True)
    # id_cliente = models.IntegerField(verbose_name='cliente')
    clientes = models.ForeignKey(Cliente, on_delete=models.CASCADE, null=True)
    id_inspired = models.IntegerField(default=0, null=True)
    salas = models.ForeignKey(Sala, on_delete=models.CASCADE, null=True)
    id_posicion = models.IntegerField(default=0, null=True)
    id_marca = models.ForeignKey(Marca, on_delete=models.CASCADE, null=True)
    #id_modelo = models.IntegerField(default=0, verbose_name='modelo', null=True)
    #descripcion = models.CharField(max_length=200, null=True)
    fecha_produccion = models.DateTimeField(null=True, verbose_name="Creado")
    fecha_instalacion = models.DateTimeField(null=True, verbose_name="Creado")
    fecha_liquidacion = models.DateTimeField(null=True, verbose_name="Creado")
    fecha_despacho = models.DateTimeField(null=True, verbose_name="Creado")
    fecha_cobro = models.DateTimeField(null=True, verbose_name="Creado")
    fecha_retiro = models.DateTimeField(null=True, verbose_name="Creado")
    id_status = models.ForeignKey(Status, on_delete=models.CASCADE, null=True)
    serie_PMV = models.CharField(max_length=20, null=True, blank=True)
    serie_IGG = models.CharField(max_length=20, null=True, blank=True)
    erial_CPU = models.CharField(max_length=50, null=True, blank=True)
    serial_HD = models.CharField(max_length=50, null=True, blank=True)
    serial_cabezal = models.CharField(max_length=50, null=True, blank=True)
    serial_staker = models.CharField(max_length=50, null=True, blank=True)
    serial_base = models.CharField(max_length=50, null=True, blank=True)
    serial_monitor1 = models.CharField(max_length=50, null=True, blank=True)
    serial_monitor2 = models.CharField(max_length=50, null=True, blank=True)
    serial_llave = models.CharField(max_length=50, null=True, blank=True)
    serial_printer = models.CharField(max_length=50, null=True, blank=True)
    serial_traking = models.CharField(max_length=50, null=True, blank=True)
    serial_intrusion = models.CharField(max_length=50, null=True, blank=True)
    serial_pay_link = models.CharField(max_length=50, null=True, blank=True)
    serial_fuente = models.CharField(max_length=50, null=True, blank=True)
    declara_CPU = models.CharField(max_length=50, null=True, blank=True)
    declara_HD = models.CharField(max_length=50, null=True, blank=True)
    declara_cabezal = models.CharField(max_length=50, null=True, blank=True)
    declara_staker = models.CharField(max_length=50, null=True, blank=True)
    declara_base = models.CharField(max_length=50, null=True, blank=True)
    declara_monitor1 = models.CharField(max_length=50, null=True, blank=True)
    declara_monitor2 = models.CharField(max_length=50, null=True, blank=True)
    declara_printer = models.CharField(max_length=50, null=True, blank=True)
    declara_traking = models.CharField(max_length=50, null=True, blank=True)
    declara_intrusion = models.CharField(max_length=50, null=True, blank=True)
    declara_pay_link = models.CharField(max_length=50, null=True, blank=True)
    declara_fuente = models.CharField(max_length=50, null=True, blank=True)
    DHCP = models.IntegerField(default=0, null=True, blank=True)
    IP = models.CharField(max_length=20, null=True, blank=True)
    mascara = models.CharField(max_length=20, null=True, blank=True)
    puerta = models.CharField(max_length=20, null=True, blank=True)
    DNS1 = models.CharField(max_length=20, null=True, blank=True)
    DNS2 = models.CharField(max_length=20, null=True, blank=True)
    eliminar = models.IntegerField(default=0, null=True, blank=True)
    activo = models.IntegerField(default=1, null=True, blank=True)
    id_seguridad = models.IntegerField(default=0, null=True, blank=True)
    fecha_seguridad = models.DateTimeField( null=True, blank=True)
    serial_windows = models.DateTimeField( null=True, blank=True)
    liquidar = models.IntegerField(default=0, null=True, blank=True)
    razon = models.ForeignKey(Razos_Social, on_delete=models.CASCADE, null=True, verbose_name="Razon Social")
    produccion_igg = models.CharField(max_length=20, null=True, blank=True)
    modeloIGG = models.CharField(max_length=20, default=0, null=True, blank=True)
    factura_PMV = models.CharField(max_length=15, null=True, blank=True)
    id_contrato = models.IntegerField(default=0, null=True, blank=True, verbose_name="Liquidar Imp. Coljuegos:")
    nuc = models.CharField(max_length=15, null=True)
    rep_coljuegos = models.IntegerField(default=0, null=True, verbose_name="Tipo Impuesto Coljuegos:")
    id_proveedor_SAS = models.IntegerField(default=0, null=True)
    saskey = models.IntegerField(default=0, null=True)
    menu_mix = models.ForeignKey(Menu, on_delete=models.CASCADE, null=True, blank=True)
    familia = models.ForeignKey(FamiliaMaquina, on_delete=models.CASCADE, null=True, blank=True)
    soporte = models.IntegerField(default=0, null=True)
    vendida = models.IntegerField(default=0, null=True)
    id_modelo_igg = models.ForeignKey(Modelo, on_delete=models.CASCADE, null=True, blank=True)
    id_tipo_maquina = models.IntegerField(default=0, verbose_name='tipo maquina', null=True)
    tipo_operacion = models.CharField(max_length=2, null=True)
    fecha_soporte = models.DateTimeField(null=True, blank=True)
    actualiza = models.IntegerField(default=0, blank=True)
    fecha_actualiza = models.DateTimeField( null=True, blank=True)
    garantia = models.IntegerField(default=0, null=True, blank=True)
    fecha_soporte = models.DateTimeField( null=True, blank=True)
    fecha_garantia = models.DateTimeField( null=True, blank=True)
    pripiedad = models.ForeignKey(Propiedad, on_delete=models.CASCADE, null=True, blank=True, verbose_name="Propiedad")
    id_condicion = models.ForeignKey(Condicion, on_delete=models.CASCADE, null=True, blank=True, verbose_name="Condición")
    referencia = models.CharField(max_length=50, null=True, blank=True)
    observacion = models.CharField(max_length=100, null=True, blank=True)
    frozen = models.IntegerField(default=0, null=True)
    fechaFrozen = models.DateTimeField( null=True)
    id_grupo_frozen = models.IntegerField(default=0, null=True)
    tipo_coljuegos = models.CharField(max_length=2, null=True)
    #sin_transmitir = models.IntegerField(default=0, null=True)
    reservacion = models.CharField(max_length=100, null=True)
    create_at = models.DateTimeField(null=True, verbose_name="Creado")
    update_at = models.DateTimeField(null=True, verbose_name="Editado")

    def Codigo(self):
        return  "{}".format(self.id_codigo)

    def __str__(self):
        return self.Codigo()

class Proveedore(models.Model):
    nit = models.CharField(max_length=15)
    razon_social = models.CharField(max_length=100)
    contacto = models.CharField(max_length=100)
    direccion = models.CharField(max_length=100)
    ciudad = models.ForeignKey(Ciudad, on_delete=models.CASCADE, null=True, blank=True)
    departamento = models.ForeignKey(Departamento, on_delete=models.CASCADE, null=True, blank=True)
    pais = models.CharField(max_length=50)
    telefono = models.CharField(max_length=80)
    email = models.CharField(max_length=100)
    activo = models.IntegerField(default=0)
    eliminar = models.IntegerField(default=0)
    id_seguridad = models.IntegerField(default=0)
    fecha_seguridad = models.DateTimeField()
    sincroniza = models.IntegerField(default=0)
    fecha_sincroniza = models.DateTimeField()
    id_clase = models.IntegerField(default=0)
    id_tipo = models.CharField(max_length=1)
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")

    def Proovedor(self):
        return  "{}".format(self.razon_social)

    def __str__(self):
        return self.Proovedor()

class CausasFalla(models.Model):
    numero = models.CharField(max_length=10)
    descripcion_sp = models.CharField(max_length=100)
    descripcion_en = models.CharField(max_length=100)
    observacion = models.CharField(max_length=100)
    id_tipo = models.IntegerField(default=0)
    activo = models.IntegerField(default=1)
    eliminar = models.IntegerField(default=0)
    id_seguridad = models.IntegerField(default=0)
    fecha_seguridad = models.DateTimeField()
    sincroniza = models.IntegerField(default=0)
    fecha_sincroniza = models.DateTimeField()
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")

    def CausaError(self):
        return  "{}".format(self.descripcion_sp)

    def __str__(self):
        return self.CausaError()

class CodigoFalla(models.Model):
    codigo = models.CharField(max_length=10)
    descripcion_sp = models.CharField(max_length=100)
    descripcion_en = models.CharField(max_length=100)
    observacion = models.CharField(max_length=100)
    categoria = models.ForeignKey(CategoriaFalla, on_delete=models.CASCADE, null=True, blank=True)
    id_tipo = models.IntegerField(default=0)
    activo = models.IntegerField(default=1)
    eliminar = models.IntegerField(default=0)
    id_seguridad = models.IntegerField(default=0)
    fecha_seguridad = models.DateTimeField()
    sincroniza = models.IntegerField(default=0)
    fecha_sincroniza = models.DateTimeField()
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")

    def COdigoFalla(self):
        return  "{}".format(self.descripcion_sp)

    def __str__(self):
        return self.COdigoFalla()

class SolucionFalla(models.Model):
    numero = models.CharField(max_length=10)
    descripcion_sp = models.CharField(max_length=100)
    descripcion_en = models.CharField(max_length=100)
    observacion = models.CharField(max_length=100)
    id_tipo = models.IntegerField(default=0)
    id_tipo_maquina = models.IntegerField(default=0)
    activo = models.IntegerField(default=1)
    eliminar = models.IntegerField(default=0)
    id_seguridad = models.IntegerField(default=0)
    fecha_seguridad = models.DateTimeField()
    sincroniza = models.IntegerField(default=0)
    fecha_sincroniza = models.DateTimeField()
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")

    def SolucionFalla(self):
        return  "{}".format(self.descripcion_sp)

    def __str__(self):
        return self.SolucionFalla()

class ProcedimientosSFP(models.Model):
    numero = models.CharField(max_length=10)
    titulo = models.CharField(max_length=100)
    categorias = models.ForeignKey(CategoriaFalla, on_delete=models.CASCADE, null=True, blank=True)
    observacion = models.CharField(max_length=100)
    id_tipo = models.IntegerField(default=0)
    activo = models.IntegerField(default=1)
    eliminar = models.IntegerField(default=0)
    id_seguridad = models.IntegerField(default=0)
    fecha_seguridad = models.DateTimeField()
    sincroniza = models.IntegerField(default=0)
    fecha_sincroniza = models.DateTimeField()
    create_at = models.DateTimeField(auto_now_add=True, verbose_name="Creado")
    update_at = models.DateTimeField(auto_now=True, verbose_name="Editado")
